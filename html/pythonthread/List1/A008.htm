<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>Python的线程池实现 - 莫小 - 博客园</title>
<link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=vVKakOZtmmmI9PttuB8cajJQIPwEqvGelvnOjnc3uik1"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="/skins/SimpleBlue/bundle-SimpleBlue.css?v=g1Ly_5CnmgosFgcSP2WTmRocMrlS6IO9yhcnMXW9dOA1"/>
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/nsnow/rss"/>
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/nsnow/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/nsnow/wlwmanifest.xml"/>
<script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'nsnow', cb_enable_mathjax=false;</script>
<script src="/bundles/blog-common.js?v=5SljHjvFayhSwYEpPGn3hGjzMUiUy8_LhBNYFY8TdeA1" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>

<div id="home">
<div id="header">
	<div id="blogTitle">
		
<!--done-->
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/nsnow/">莫小</a></div>
<div class="subtitle"></div>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li id="nav_sitehome"><a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a></li>
<li id="nav_myhome"><a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/nsnow/">首页</a></li>
<li id="nav_q"><a class="menu" href="http://q.cnblogs.com/">博问</a></li>
<li id="nav_ing"><a class="menu" href="http://home.cnblogs.com/ing/">闪存</a></li>
<li id="nav_newpost"><a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li id="nav_contact"><a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/%e8%8e%ab%e5%b0%8f">联系</a></li>
<li id="nav_rss"><a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/nsnow/rss">订阅</a>
<!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/nsnow/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li id="nav_admin"><a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a></li>
</ul>

		<div class="blogStats">
			
			
<!--done-->
随笔-92&nbsp;
文章-0&nbsp;
评论-6&nbsp;

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		

<!--done-->
<div id="topics">
	<div class = "post">
		<h1 class = "postTitle">
			<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/nsnow/archive/2010/04/18/1714596.html">Python的线程池实现</a>
		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body"><div class="cnblogs_code" onclick="cnblogs_code_show('4f21ffec-818e-499d-b8f5-5385799fad04')"><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" class="code_img_closed" id="code_img_closed_4f21ffec-818e-499d-b8f5-5385799fad04" style="display: none;" alt="" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" class="code_img_opened" id="code_img_opened_4f21ffec-818e-499d-b8f5-5385799fad04" onclick="cnblogs_code_hide('4f21ffec-818e-499d-b8f5-5385799fad04',event)"><span class="cnblogs_code_collapse">代码</span><div id="cnblogs_code_open_4f21ffec-818e-499d-b8f5-5385799fad04"><div><!--<br/ /><br/ />Code highlighting produced by Actipro CodeHighlighter (freeware)<br/ />http://www.CodeHighlighter.com/<br/ /><br/ />--><span style="color: #008080;">&nbsp;1</span>&nbsp;<span style="color: #008000;">#</span><span style="color: #008000;">coding:utf-8</span><span style="color: #008000;"><br /></span><span style="color: #008080;">&nbsp;2</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;"><br /></span><span style="color: #008080;">&nbsp;3</span>&nbsp;<span style="color: #000000;"></span><span style="color: #008000;">#</span><span style="color: #008000;">Python的线程池实现</span><span style="color: #008000;"><br /></span><span style="color: #008080;">&nbsp;4</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;"><br /></span><span style="color: #008080;">&nbsp;5</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">import</span><span style="color: #000000;">&nbsp;Queue<br /></span><span style="color: #008080;">&nbsp;6</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">import</span><span style="color: #000000;">&nbsp;threading<br /></span><span style="color: #008080;">&nbsp;7</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">import</span><span style="color: #000000;">&nbsp;sys<br /></span><span style="color: #008080;">&nbsp;8</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">import</span><span style="color: #000000;">&nbsp;time<br /></span><span style="color: #008080;">&nbsp;9</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">import</span><span style="color: #000000;">&nbsp;urllib<br /></span><span style="color: #008080;">10</span>&nbsp;<span style="color: #000000;"><br /></span><span style="color: #008080;">11</span>&nbsp;<span style="color: #000000;"></span><span style="color: #008000;">#</span><span style="color: #008000;">替我们工作的线程池中的线程</span><span style="color: #008000;"><br /></span><span style="color: #008080;">12</span>&nbsp;<span style="color: #008000;"></span><span style="color: #0000ff;">class</span><span style="color: #000000;">&nbsp;MyThread(threading.Thread):<br /></span><span style="color: #008080;">13</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;</span><span style="color: #800080;">__init__</span><span style="color: #000000;">(self,&nbsp;workQueue,&nbsp;resultQueue,timeout</span><span style="color: #000000;">=</span><span style="color: #000000;">30</span><span style="color: #000000;">,&nbsp;</span><span style="color: #000000;">**</span><span style="color: #000000;">kwargs):<br /></span><span style="color: #008080;">14</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;threading.Thread.</span><span style="color: #800080;">__init__</span><span style="color: #000000;">(self,&nbsp;kwargs</span><span style="color: #000000;">=</span><span style="color: #000000;">kwargs)<br /></span><span style="color: #008080;">15</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">线程在结束前等待任务队列多长时间</span><span style="color: #008000;"><br /></span><span style="color: #008080;">16</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;self.timeout&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;timeout<br /></span><span style="color: #008080;">17</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.setDaemon(True)<br /></span><span style="color: #008080;">18</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.workQueue&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;workQueue<br /></span><span style="color: #008080;">19</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.resultQueue&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;resultQueue<br /></span><span style="color: #008080;">20</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.start()<br /></span><span style="color: #008080;">21</span>&nbsp;<span style="color: #000000;"><br /></span><span style="color: #008080;">22</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;run(self):<br /></span><span style="color: #008080;">23</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;</span><span style="color: #0000ff;">while</span><span style="color: #000000;">&nbsp;True:<br /></span><span style="color: #008080;">24</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;</span><span style="color: #0000ff;">try</span><span style="color: #000000;">:<br /></span><span style="color: #008080;">25</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">从工作队列中获取一个任务</span><span style="color: #008000;"><br /></span><span style="color: #008080;">26</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;callable,&nbsp;args,&nbsp;kwargs&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;self.workQueue.get(timeout</span><span style="color: #000000;">=</span><span style="color: #000000;">self.timeout)<br /></span><span style="color: #008080;">27</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">我们要执行的任务</span><span style="color: #008000;"><br /></span><span style="color: #008080;">28</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;res&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;callable(args,&nbsp;kwargs)<br /></span><span style="color: #008080;">29</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">报任务返回的结果放在结果队列中</span><span style="color: #008000;"><br /></span><span style="color: #008080;">30</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;self.resultQueue.put(res</span><span style="color: #000000;">+</span><span style="color: #800000;">"</span><span style="color: #800000;">&nbsp;|&nbsp;</span><span style="color: #800000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">self.getName())&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span style="color: #008080;">31</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;</span><span style="color: #0000ff;">except</span><span style="color: #000000;">&nbsp;Queue.Empty:&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">任务队列空的时候结束此线程</span><span style="color: #008000;"><br /></span><span style="color: #008080;">32</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000ff;">break</span><span style="color: #000000;"><br /></span><span style="color: #008080;">33</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;</span><span style="color: #0000ff;">except</span><span style="color: #000000;">&nbsp;:<br /></span><span style="color: #008080;">34</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000ff;">print</span><span style="color: #000000;">&nbsp;sys.exc_info()<br /></span><span style="color: #008080;">35</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000ff;">raise</span><span style="color: #000000;"><br /></span><span style="color: #008080;">36</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span style="color: #008080;">37</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">class</span><span style="color: #000000;">&nbsp;ThreadPool:<br /></span><span style="color: #008080;">38</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;</span><span style="color: #800080;">__init__</span><span style="color: #000000;">(&nbsp;self,&nbsp;num_of_threads</span><span style="color: #000000;">=</span><span style="color: #000000;">10</span><span style="color: #000000;">):<br /></span><span style="color: #008080;">39</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.workQueue&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;Queue.Queue()<br /></span><span style="color: #008080;">40</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.resultQueue&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;Queue.Queue()<br /></span><span style="color: #008080;">41</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.threads&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;[]<br /></span><span style="color: #008080;">42</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.</span><span style="color: #800080;">__createThreadPool</span><span style="color: #000000;">(&nbsp;num_of_threads&nbsp;)<br /></span><span style="color: #008080;">43</span>&nbsp;<span style="color: #000000;"><br /></span><span style="color: #008080;">44</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;</span><span style="color: #800080;">__createThreadPool</span><span style="color: #000000;">(&nbsp;self,&nbsp;num_of_threads&nbsp;):<br /></span><span style="color: #008080;">45</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;</span><span style="color: #0000ff;">for</span><span style="color: #000000;">&nbsp;i&nbsp;</span><span style="color: #0000ff;">in</span><span style="color: #000000;">&nbsp;range(&nbsp;num_of_threads&nbsp;):<br /></span><span style="color: #008080;">46</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;thread&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;MyThread(&nbsp;self.workQueue,&nbsp;self.resultQueue&nbsp;)<br /></span><span style="color: #008080;">47</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;self.threads.append(thread)<br /></span><span style="color: #008080;">48</span>&nbsp;<span style="color: #000000;"><br /></span><span style="color: #008080;">49</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;wait_for_complete(self):<br /></span><span style="color: #008080;">50</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">等待所有线程完成。</span><span style="color: #008000;"><br /></span><span style="color: #008080;">51</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;</span><span style="color: #0000ff;">while</span><span style="color: #000000;">&nbsp;len(self.threads):<br /></span><span style="color: #008080;">52</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;thread&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;self.threads.pop()<br /></span><span style="color: #008080;">53</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">等待线程结束</span><span style="color: #008000;"><br /></span><span style="color: #008080;">54</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;&nbsp;</span><span style="color: #0000ff;">if</span><span style="color: #000000;">&nbsp;thread.isAlive():</span><span style="color: #008000;">#</span><span style="color: #008000;">判断线程是否还存活来决定是否调用join</span><span style="color: #008000;"><br /></span><span style="color: #008080;">55</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;thread.join()<br /></span><span style="color: #008080;">56</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span style="color: #008080;">57</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;add_job(&nbsp;self,&nbsp;callable,&nbsp;</span><span style="color: #000000;">*</span><span style="color: #000000;">args,&nbsp;</span><span style="color: #000000;">**</span><span style="color: #000000;">kwargs&nbsp;):<br /></span><span style="color: #008080;">58</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;self.workQueue.put(&nbsp;(callable,args,kwargs)&nbsp;)<br /></span><span style="color: #008080;">59</span>&nbsp;<span style="color: #000000;"><br /></span><span style="color: #008080;">60</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;test_job(id,&nbsp;sleep&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;</span><span style="color: #000000;">0.001</span><span style="color: #000000;">&nbsp;):<br /></span><span style="color: #008080;">61</span>&nbsp;<span style="color: #000000;">&nbsp;html&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;</span><span style="color: #800000;">""</span><span style="color: #000000;"><br /></span><span style="color: #008080;">62</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">try</span><span style="color: #000000;">:<br /></span><span style="color: #008080;">63</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;time.sleep(</span><span style="color: #000000;">1</span><span style="color: #000000;">)<br /></span><span style="color: #008080;">64</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;conn&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;urllib.urlopen(</span><span style="color: #800000;">'</span><span style="color: #800000;">http://www.google.com/</span><span style="color: #800000;">'</span><span style="color: #000000;">)<br /></span><span style="color: #008080;">65</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;html&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;conn.read(</span><span style="color: #000000;">20</span><span style="color: #000000;">)<br /></span><span style="color: #008080;">66</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">except</span><span style="color: #000000;">:<br /></span><span style="color: #008080;">67</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;</span><span style="color: #0000ff;">print</span><span style="color: #000000;">&nbsp;&nbsp;sys.exc_info()<br /></span><span style="color: #008080;">68</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">return</span><span style="color: #000000;">&nbsp;&nbsp;html<br /></span><span style="color: #008080;">69</span>&nbsp;<span style="color: #000000;"><br /></span><span style="color: #008080;">70</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">def</span><span style="color: #000000;">&nbsp;test():<br /></span><span style="color: #008080;">71</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">print</span><span style="color: #000000;">&nbsp;</span><span style="color: #800000;">'</span><span style="color: #800000;">start&nbsp;testing</span><span style="color: #800000;">'</span><span style="color: #000000;"><br /></span><span style="color: #008080;">72</span>&nbsp;<span style="color: #000000;">&nbsp;tp&nbsp;</span><span style="color: #000000;">=</span><span style="color: #000000;">&nbsp;ThreadPool(</span><span style="color: #000000;">10</span><span style="color: #000000;">)<br /></span><span style="color: #008080;">73</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">for</span><span style="color: #000000;">&nbsp;i&nbsp;</span><span style="color: #0000ff;">in</span><span style="color: #000000;">&nbsp;range(</span><span style="color: #000000;">50</span><span style="color: #000000;">):<br /></span><span style="color: #008080;">74</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;time.sleep(</span><span style="color: #000000;">0.2</span><span style="color: #000000;">)<br /></span><span style="color: #008080;">75</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;tp.add_job(&nbsp;test_job,&nbsp;i,&nbsp;i</span><span style="color: #000000;">*</span><span style="color: #000000;">0.001</span><span style="color: #000000;">&nbsp;)<br /></span><span style="color: #008080;">76</span>&nbsp;<span style="color: #000000;">&nbsp;tp.wait_for_complete()<br /></span><span style="color: #008080;">77</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #008000;">#</span><span style="color: #008000;">处理结果</span><span style="color: #008000;"><br /></span><span style="color: #008080;">78</span>&nbsp;<span style="color: #008000;"></span><span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">print</span><span style="color: #000000;">&nbsp;</span><span style="color: #800000;">'</span><span style="color: #800000;">result&nbsp;Queue\</span><span style="color: #800000;">'</span><span style="color: #000000;">s&nbsp;length&nbsp;</span><span style="color: #000000;">==</span><span style="color: #000000;">&nbsp;</span><span style="color: #000000;">%</span><span style="color: #000000;">d&nbsp;</span><span style="color: #800000;">'</span><span style="color: #800000;">%&nbsp;tp.resultQueue.qsize()</span><span style="color: #800000;"><br /></span><span style="color: #008080;">79</span>&nbsp;<span style="color: #800000;"></span><span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">while</span><span style="color: #000000;">&nbsp;tp.resultQueue.qsize():<br /></span><span style="color: #008080;">80</span>&nbsp;<span style="color: #000000;">&nbsp;&nbsp;</span><span style="color: #0000ff;">print</span><span style="color: #000000;">&nbsp;tp.resultQueue.get()<br /></span><span style="color: #008080;">81</span>&nbsp;<span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">print</span><span style="color: #000000;">&nbsp;</span><span style="color: #800000;">'</span><span style="color: #800000;">end&nbsp;testing</span><span style="color: #800000;">'</span><span style="color: #000000;"><br /></span><span style="color: #008080;">82</span>&nbsp;<span style="color: #000000;"></span><span style="color: #0000ff;">if</span><span style="color: #000000;">&nbsp;</span><span style="color: #800080;">__name__</span><span style="color: #000000;">&nbsp;</span><span style="color: #000000;">==</span><span style="color: #000000;">&nbsp;</span><span style="color: #800000;">'</span><span style="color: #800000;">__main__</span><span style="color: #800000;">'</span><span style="color: #000000;">:<br /></span><span style="color: #008080;">83</span>&nbsp;<span style="color: #000000;">&nbsp;test()</span></div></div></div><p><br /></p></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory"></div>
<div id="EntryTag"></div>
<div id="blog_post_info">
</div>
<div class="clear"></div>
<div id="post_next_prev"></div>
</div>


		</div>
		<div class = "postDesc">posted @ <span id="post-date">2010-04-18 11:15</span> <a href='http://www.cnblogs.com/nsnow/'>莫小</a> 阅读(<span id="post_view_count">...</span>) 评论(<span id="post_comment_count">...</span>)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=1714596" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(1714596);return false;">收藏</a></div>
	</div>
	<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=54265,cb_entryId=1714596,cb_blogApp=currentBlogApp,cb_blogUserGuid='3019faa3-0515-de11-9e4d-001cf0cd104b',cb_entryCreatedDate='2010/4/18 11:15:00';loadViewCount(cb_entryId);</script>
	
</div><!--end: topics 文章、评论容器-->
<a name="!comments"></a><div id="blog-comments-placeholder"></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
<div id="comment_form_container"></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="site_nav_under"><a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园">博客园首页</a><a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区">博问</a><a href="http://news.cnblogs.com/" target="_blank" title="IT新闻">新闻</a><a href="http://home.cnblogs.com/ing/" target="_blank">闪存</a><a href="http://job.cnblogs.com/" target="_blank">程序员招聘</a><a href="http://kb.cnblogs.com/" target="_blank">知识库</a></div>
<div id="opt_under_post"></div>
<script type="text/javascript">
    var enableGoogleAd = true;var googletag = googletag || {};googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
</script>
<div id="ad_under_post_holder">
<script type='text/javascript'>
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        var gads = document.createElement('script');
        gads.async = true;
        gads.type = 'text/javascript';
        var useSSL = 'https:' == document.location.protocol;
        gads.src = (useSSL ? 'https:' : 'http:') +'//www.googletagservices.com/tag/js/gpt.js';
        var node = document.getElementsByTagName('script')[0];
        node.parentNode.insertBefore(gads, node);
    })();
</script>
<script type='text/javascript'>
    try {
        googletag.cmd.push(function () {
            googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    } catch (e) { }
</script>
<div id="google_ad_c1" class="c_ad_block">
    <div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'>
    <script type='text/javascript'>
    try{
        googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });
    } catch (e) { }
    </script>
    </div>
</div>
</div>
<div id="blog_news_kb"></div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    $.ajax({ url: 'http://counter.cnblogs.com/blog/post/' + cb_entryId, type: 'get', dataType: 'script', cache: true });
});
</script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news"></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script></div>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright &copy;2014 莫小
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->
</body>
</html>
